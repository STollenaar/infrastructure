global:
  labels:
    app: cmstate-webhook
  annotations: {}

serviceAccount:
  create: true
  name: cmstate-operator-webhook-sa

image:
  repository: public.ecr.aws/x4a1o1q2/cmstate-operator-webhook
  tag: latest
  pullPolicy: IfNotPresent

deployment:
  labels: {}
  annotations: {}
  pod:
    labels:
      app: "cmstate-webhook"
    annotations: {}
    volumes:
      - name: ${cert_secret}
        secret:
          secretName: ${cert_secret}
        mountPath: /certs

service:
  name: "cmstate-operator-webhook-service"
  labels: {}
  annotations: {}

rbac:
  create: true
  role:
    name: cmstate-operator-role
    rules:
      - apiGroups: [""]
        resources: ["pods"]
        verbs: ["get", "list", "watch"]
      - apiGroups: ["cache.spices.dev"]
        resources: ["cmstates"]
        verbs: ["create", "get", "patch", "list", "watch"]

webhook:
  labels: {}
  annotations:
    "cert-manager.io/inject-ca-from-secret": "${ca_secret}"

cmstate-operator:
  enabled: false
  global:
    labels:
      app: cmstate-operator

  deployment:
    labels: {}
    annotations: {}
    pod:
      labels: {}
      annotations: {}

  service:
    labels: {}
    annotations: {}

  replicaCount: 1
  image:
    repository: public.ecr.aws/x4a1o1q2/cmstate-operator
    tag: latest
    pullPolicy: IfNotPresent

  nameOverride: ""
  fullnameOverride: ""

  resources: {}

  serviceAccount:
    create: true
    name: "cmstate-operator"

  rbac:
    create: true
    role:
      name: cmstate-operator
      rules:
        - apiGroups: [""]
          resources: ["configmaps"]
          verbs: ["create", "delete", "update", "get", "list", "watch"]
        - apiGroups: ["cache.spices.dev"]
          resources: ["cmstates"]
          verbs: ["create", "delete", "update", "get", "list", "watch"]
        - apiGroups: ["cache.spices.dev"]
          resources: ["cmstates/finalizers"]
          verbs: ["update"]
        - apiGroups: ["cache.spices.dev"]
          resources: ["cmstates/status"]
          verbs: ["get", "patch", "update"]
